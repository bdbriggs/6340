<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>Contact — Dumpster Fire Coding</title>

    <!-- Bootstrap 5 CSS (CDN) -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />

    <!-- Site styles to match index.html -->
 <link rel="stylesheet" href="/css/style.css" />

    <style>
      /* Page-specific tweaks (kept minimal so your style.css stays in control) */
      .contact-card { max-width: 720px; }
      .hp-field { position: absolute; left: -5000px; width: 1px; height: 1px; overflow: hidden; }
      .form-control::placeholder { opacity: .7; }
    </style>
  </head>
  <body class="bg-dark text-light">
    <!-- Header (mirrors index navbar) -->
    <header>
      <nav class="navbar navbar-expand-lg navbar-dark bg-black border-bottom border-secondary">
        <div class="container">
          <ul class="navbar-nav ms-auto">
<a class="nav-link" href="/">Home</a>
<a class="nav-link" href="/featured">Featured</a>
<a class="nav-link" href="/gallery">Gallery</a>
<a class="nav-link" href="/about">About</a>
<a class="nav-link active" aria-current="page" href="/contact">Contact</a>



          </ul>
        </div>
      </nav>
    </header>

    <main class="py-5">
      <div class="container">
        <h1 class="display-5 mb-4">Contact Us</h1>

        <!-- Success / Error alerts (dark-friendly) -->
        <div id="alert-success" class="alert alert-success d-none" role="alert" aria-live="polite">
          ✅ Thanks! Your message has been sent.
        </div>
        <div id="alert-error" class="alert alert-danger d-none" role="alert" aria-live="assertive">
          ❌ Oops—something went wrong. Please try again.
        </div>

        <div class="card bg-black text-light border-secondary shadow-sm contact-card mx-auto">
          <div class="card-body p-4 p-md-5">
            <p class="text-secondary mb-4">Have a question or feedback? Send us a note and we’ll get back to you.</p>

            <form id="contact-form" class="needs-validation" novalidate>
              <!-- Honeypot (spam trap) -->
              <div class="hp-field">
                <label for="company">Company</label>
                <input type="text" id="company" name="company" tabindex="-1" autocomplete="off" />
              </div>

              <div class="row g-3">
                <div class="col-md-6">
                  <label for="name" class="form-label">Name</label>
                  <input type="text" class="form-control bg-dark text-light border-secondary" id="name" name="name" required placeholder="Jane Doe" />
                  <div class="invalid-feedback">Please enter your name.</div>
                </div>

                <div class="col-md-6">
                  <label for="email" class="form-label">Email</label>
                  <input type="email" class="form-control bg-dark text-light border-secondary" id="email" name="email" required placeholder="jane@example.com" />
                  <div class="invalid-feedback">Please provide a valid email.</div>
                </div>

                <div class="col-12">
                  <label for="subject" class="form-label">Subject</label>
                  <input type="text" class="form-control bg-dark text-light border-secondary" id="subject" name="subject" required placeholder="How can we help?" />
                  <div class="invalid-feedback">Please enter a subject.</div>
                </div>

                <div class="col-12">
                  <label for="message" class="form-label">Message</label>
                  <textarea class="form-control bg-dark text-light border-secondary" id="message" name="message" rows="5" required placeholder="Write your message here..."></textarea>
                  <div class="invalid-feedback">Please enter a message.</div>
                </div>

                <div class="col-12">
                  <div class="form-check">
                    <input class="form-check-input bg-dark border-secondary" type="checkbox" value="yes" id="consent" required />
                    <label class="form-check-label" for="consent">I agree to be contacted about my inquiry.</label>
                    <div class="invalid-feedback">You must agree before submitting.</div>
                  </div>
                </div>

                <div class="col-12 d-grid d-sm-flex gap-2">
                  <button class="btn btn-primary px-4" type="submit">Send message</button>
                  <button class="btn btn-outline-secondary" type="reset">Reset</button>
                </div>
              </div>
            </form>
          </div>
        </div>
      </div>
    </main>

    <!-- Footer (mirrors index footer) -->
    <footer class="py-4 bg-black border-top border-secondary">
      <div class="container d-flex justify-content-between small">
        <span>© <span id="year"></span> Baily</span>
        <span>
          <a href="#" class="link-light text-decoration-none">GitHub</a> ·
          <a href="#" class="link-light text-decoration-none">Instagram</a>
        </span>
      </div>
    </footer>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>

    <script>
  // Year in footer
  document.getElementById("year").textContent = new Date().getFullYear();

  // Local dev: Node server
const FORM_ENDPOINT = "/api/contact";

  const form = document.getElementById("contact-form");
  const success = document.getElementById("alert-success");
  const error = document.getElementById("alert-error");

  function showSuccess(msg = "✅ Thanks! Your message has been sent.") {
    success.textContent = msg;
    success.classList.remove("d-none");
    error.classList.add("d-none");
  }
  function showError(msg = "❌ Oops—something went wrong. Please try again.") {
    error.textContent = msg;
    error.classList.remove("d-none");
    success.classList.add("d-none");
  }

  form.addEventListener("submit", async (e) => {
    e.preventDefault();
    success.classList.add("d-none");
    error.classList.add("d-none");

    // Honeypot
    const hp = document.getElementById("company");
    if (hp && hp.value) {
      console.log("[contact] honeypot triggered; treating as spam");
      form.reset();
      showSuccess();
      return;
    }

    // HTML5 validation
    if (!form.checkValidity()) {
      form.classList.add("was-validated");
      showError("Please complete all required fields (including the checkbox).");
      return;
    }

    // Disable submit during request
    const btn = form.querySelector('button[type="submit"]');
    const btnPrev = btn ? btn.textContent : "";
    if (btn) { btn.disabled = true; btn.textContent = "Sending…"; }

    const payload = {
      name: document.getElementById("name").value.trim(),
      email: document.getElementById("email").value.trim(),
      subject: document.getElementById("subject").value.trim(),
      message: document.getElementById("message").value.trim(),
      consent: document.getElementById("consent").checked,
      company: hp?.value || ""
    };

    console.log("[contact] POST", FORM_ENDPOINT, payload);

    try {
      const res = await fetch(FORM_ENDPOINT, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
          "Accept": "application/json"
        },
        body: JSON.stringify(payload),
      });

      // Try JSON first; fall back to text
      let data = null, text = "";
      try { data = await res.clone().json(); } catch {}
      if (!data) { try { text = await res.text(); } catch {} }

      console.log("[contact] status:", res.status, "data:", data || text);

      if (res.ok && (data?.ok === true || data == null)) {
        form.reset();
        form.classList.remove("was-validated");
        showSuccess();
      } else {
        const msg = (data && (data.error || data.message)) || text || `Server error (status ${res.status})`;
        showError(msg);
      }
    } catch (err) {
      console.error("[contact] network/error:", err);
      showError(err?.message || "Network error");
    } finally {
      if (btn) { btn.disabled = false; btn.textContent = btnPrev || "Send message"; }
    }
  });
</script>
  </body>
</html>
